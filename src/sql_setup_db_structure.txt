


DECLARE
--parameters
    --supress EXECUTE IMMEDIATE
    in_noexec                               BOOLEAN := FALSE;
    in_create_tables                        BOOLEAN := TRUE;
    in_compile_procedures                   BOOLEAN := TRUE;

    --DDL formatting
    in_tab                                  CHAR(1 CHAR) := chr(9);
    in_lb                                   CHAR(1 CHAR) := chr(10);

    --naming convention
    in_program_name                         VARCHAR2(16 CHAR) := '2D21D';

    TYPE "PLSI_VARCHAR2_64CHAR_AA"          IS TABLE OF VARCHAR2(64 CHAR) INDEX BY PLS_INTEGER;

    --export table parameters
    in_export_tables_owner                  "USER_USERS"."USERNAME"%TYPE;
    in_export_main_table_name               "USER_TABLES"."TABLE_NAME"%TYPE := in_program_name || '_SET';
    in_export_main_table_attributes         "PLSI_VARCHAR2_64CHAR_AA" := "PLSI_VARCHAR2_64CHAR_AA"(
                                                                            1 => 'SET_ID',
                                                                            2 => 'SET_CREATE_TS',
                                                                            3 => 'ROBOT_START_TS',
                                                                            4 => 'ROBOT_END_TS',
                                                                            5 => 'SET_SELECT_STMT',
                                                                            6 => 'SET_EFFECTIVE_TS',
                                                                            7 => 'SET_EFFECTIVE_TS_VAR'
                                                                        );
    in_export_columns_table_name            "USER_TABLES"."TABLE_NAME"%TYPE := in_program_name || '_SET_COLUMNS';
    in_export_columns_table_attributes      "PLSI_VARCHAR2_64CHAR_AA" := "PLSI_VARCHAR2_64CHAR_AA"(
                                                                            1 => in_export_main_table_attributes(1),
                                                                            2 => 'COL_INDEX',
                                                                            3 => 'COL_NAME',
                                                                            4 => 'COL_TYPE_CODE',
                                                                            5 => 'COL_TYPE_LENGTH',
                                                                            6 => 'COL_IS_EXPORTABLE'
                                                                        );
    in_export_cells_table_name              "USER_TABLES"."TABLE_NAME"%TYPE := in_program_name || '_SET_CELLS';
    in_export_cells_table_attributes        "PLSI_VARCHAR2_64CHAR_AA" := "PLSI_VARCHAR2_64CHAR_AA"(
                                                                            1 => in_export_main_table_attributes(1),
                                                                            2 => 'COL_INDEX',
                                                                            3 => 'ROW_INDEX',
                                                                            4 => 'VALUE'
                                                                        );
    in_export_cells_table_cell_type         VARCHAR2(64 CHAR) := 'VARCHAR2(511 BYTE)';
    in_export_log_table_name                "USER_TABLES"."TABLE_NAME"%TYPE := in_program_name || '_SET_LOG';
    in_export_log_table_attributes          "PLSI_VARCHAR2_64CHAR_AA" := "PLSI_VARCHAR2_64CHAR_AA"(
                                                                            1 => 'MSG_ID',
                                                                            2 => in_export_main_table_attributes(1),
                                                                            3 => 'MSG_TS',
                                                                            4 => 'MSG_TYPE',
                                                                            5 => 'MSG'
                                                                        );

    --export procedure parameters
    in_export_procedures_owner              "USER_USERS"."USERNAME"%TYPE;
    in_export_log_procedure_name            "USER_PROCEDURES"."PROCEDURE_NAME"%TYPE := in_program_name || '_SCRIBE';
    in_export_procedure_name                "USER_PROCEDURES"."PROCEDURE_NAME"%TYPE := in_program_name || '_ROBOT';
    in_export_procedure_bulk_collect_size   INTEGER := 100;
    in_export_procedure_type_code_map       PLSI_VARCHAR2_64CHAR_AA := PLSI_VARCHAR2_64CHAR_AA(
                                                                        --https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/Data-Types.html
                                                                        --https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/DBMS_SQL.html
                                                                        1 =>    '"DBMS_SQL"."VARCHAR2_TABLE"',
                                                                        2 =>    '"DBMS_SQL"."NUMBER_TABLE"',
                                                                        12 =>   '"DBMS_SQL"."DATE_TABLE"',
                                                                        96 =>   '"DBMS_SQL"."VARCHAR2_TABLE"',
                                                                        --100 =>  '"DBMS_SQL"."BINARY_FLOAT_TABLE"',
                                                                        --101 =>  '"DBMS_SQL"."BINARY_DOUBLE_TABLE"',
                                                                        180 =>  '"DBMS_SQL"."TIMESTAMP_TABLE"',
                                                                        181 =>  '"DBMS_SQL"."TIMESTAMP_WITH_TIME_ZONE_TABLE"',
                                                                        --182 =>  '"DBMS_SQL"."INTERVAL_YEAR_TO_MONTH_TABLE"',
                                                                        --183 =>  '"DBMS_SQL"."INTERVAL_DAY_TO_SECOND_TABLE"',
                                                                        231 =>  '"DBMS_SQL"."TIMESTAMP_WITH_LTZ_TABLE"'
                                                                    );

    v_count                                 INTEGER;
    v_sql                                   CLOB;

BEGIN

    SELECT COUNT(1) INTO v_count FROM ALL_USERS
    WHERE "USERNAME" = in_export_tables_owner;
    IF v_count != 1 THEN
        SELECT SYS_CONTEXT('USERENV', 'CURRENT_SCHEMA') INTO in_export_tables_owner FROM dual;
        DBMS_OUTPUT.PUT_LINE('in_export_tables_owner := ''' || in_export_tables_owner || ''';');
        DBMS_OUTPUT.NEW_LINE();
    END IF;

    v_sql := 'CREATE TABLE "' || in_export_tables_owner || '"."' || in_export_main_table_name || '"' || in_lb
        || '(' || in_lb
   || RPAD(in_tab || '"' || in_export_main_table_attributes(1) || '"', 47, ' ') || ' INTEGER GENERATED ALWAYS AS IDENTITY (MINVALUE 1 NOMAXVALUE INCREMENT BY 1 START WITH 1 NOCACHE ORDER NOCYCLE NOKEEP NOSCALE), ' || in_lb
   || RPAD(in_tab || '"' || in_export_main_table_attributes(2) || '"', 47, ' ') || ' TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL ENABLE,' || in_lb
   || RPAD(in_tab || '"' || in_export_main_table_attributes(3) || '"', 47, ' ') || ' TIMESTAMP WITH TIME ZONE,' || in_lb
   || RPAD(in_tab || '"' || in_export_main_table_attributes(4) || '"', 47, ' ') || ' TIMESTAMP WITH TIME ZONE,' || in_lb
   || RPAD(in_tab || '"' || in_export_main_table_attributes(5) || '"', 47, ' ') || ' CLOB NOT NULL ENABLE, ' || in_lb
   || RPAD(in_tab || '"' || in_export_main_table_attributes(6) || '"', 47, ' ') || ' TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,' || in_lb
   || RPAD(in_tab || '"' || in_export_main_table_attributes(7) || '"', 47, ' ') || ' VARCHAR2(32 CHAR), ' || in_lb
        || in_lb
   || RPAD(in_tab || 'CONSTRAINT "' || in_export_main_table_name || '_PK"', 47, ' ') || ' PRIMARY KEY ("' || in_export_main_table_attributes(1) || '") USING INDEX ENABLE' || in_lb
        || ')';

    DBMS_OUTPUT.PUT_LINE(v_sql);
    DBMS_OUTPUT.NEW_LINE();    
    IF NOT in_noexec AND in_create_tables THEN
        BEGIN
            EXECUTE IMMEDIATE v_sql;
        EXCEPTION
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE(SQLERRM);
                DBMS_OUTPUT.PUT_LINE('SUPRESSING FURTHER DDL STATEMENTS');
                DBMS_OUTPUT.NEW_LINE();
                in_noexec := TRUE;
        END;
    END IF;

    v_sql := 'CREATE TABLE "' || in_export_tables_owner || '"."' || in_export_columns_table_name || '"' || in_lb
        || '(' || in_lb
   || RPAD(in_tab || '"' || in_export_columns_table_attributes(1) || '"', 47, ' ') || ' CONSTRAINT "' || in_export_columns_table_name || '_FK" REFERENCES "' || in_export_tables_owner || '"."' || in_export_main_table_name || '"("' || in_export_main_table_attributes(1) || '") ON DELETE CASCADE NOT NULL ENABLE,' || in_lb
   || RPAD(in_tab || '"' || in_export_columns_table_attributes(2) || '"', 47, ' ') || ' INTEGER NOT NULL ENABLE,' || in_lb
   || RPAD(in_tab || '"' || in_export_columns_table_attributes(3) || '"', 47, ' ') || ' ' || in_export_cells_table_cell_type || ' NOT NULL ENABLE,' || in_lb
   || RPAD(in_tab || '"' || in_export_columns_table_attributes(4) || '"', 47, ' ') || ' INTEGER NOT NULL ENABLE,' || in_lb
   || RPAD(in_tab || '"' || in_export_columns_table_attributes(5) || '"', 47, ' ') || ' INTEGER NOT NULL ENABLE,' || in_lb
   || RPAD(in_tab || '"' || in_export_columns_table_attributes(6) || '"', 47, ' ') || ' NUMBER(1) NOT NULL ENABLE,' || in_lb
        || in_lb
   || RPAD(in_tab || 'CONSTRAINT "' || in_export_columns_table_name || '_PK"', 47, ' ') || ' PRIMARY KEY ("' || in_export_columns_table_attributes(1) || '", "' || in_export_columns_table_attributes(2) || '") USING INDEX ENABLE' || in_lb
        || ')';

    DBMS_OUTPUT.PUT_LINE(v_sql);
    DBMS_OUTPUT.NEW_LINE();    
    IF NOT in_noexec AND in_create_tables THEN
        BEGIN
            EXECUTE IMMEDIATE v_sql;
        EXCEPTION
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE(SQLERRM);
                DBMS_OUTPUT.PUT_LINE('SUPRESSING FURTHER DDL STATEMENTS');
                DBMS_OUTPUT.NEW_LINE(); 
                in_noexec := TRUE;
        END;
    END IF;

    v_sql := 'CREATE TABLE "' || in_export_tables_owner || '"."' || in_export_cells_table_name || '"' || in_lb
        || '(' || in_lb
   || RPAD(in_tab || '"' || in_export_cells_table_attributes(1) || '"', 47, ' ') || ' CONSTRAINT "' || in_export_cells_table_name || '_FK" REFERENCES "' || in_export_tables_owner || '"."' || in_export_main_table_name || '"("' || in_export_main_table_attributes(1) || '") ON DELETE CASCADE NOT NULL ENABLE,' || in_lb
   || RPAD(in_tab || '"' || in_export_cells_table_attributes(2) || '"', 47, ' ') || ' INTEGER NOT NULL ENABLE,' || in_lb
   || RPAD(in_tab || '"' || in_export_cells_table_attributes(3) || '"', 47, ' ') || ' INTEGER NOT NULL ENABLE,' || in_lb
   || RPAD(in_tab || '"' || in_export_cells_table_attributes(4) || '"', 47, ' ') || ' ' || in_export_cells_table_cell_type || ',' || in_lb
        || in_lb
   || RPAD(in_tab || 'CONSTRAINT "' || in_export_cells_table_name || '_PK"', 47, ' ') || ' PRIMARY KEY ("' || in_export_cells_table_attributes(1) || '", "' || in_export_cells_table_attributes(2) || '", "' || in_export_cells_table_attributes(3) || '") USING INDEX ENABLE' || in_lb
        || ')';

    DBMS_OUTPUT.PUT_LINE(v_sql);
    DBMS_OUTPUT.NEW_LINE();    
    IF NOT in_noexec AND in_create_tables THEN
        BEGIN
            EXECUTE IMMEDIATE v_sql;
        EXCEPTION
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE(SQLERRM);
                DBMS_OUTPUT.PUT_LINE('SUPRESSING FURTHER DDL STATEMENTS');
                DBMS_OUTPUT.NEW_LINE(); 
                in_noexec := TRUE;
        END;
    END IF;

    v_sql := 'CREATE TABLE "' || in_export_tables_owner || '"."' || in_export_log_table_name || '"' || in_lb
        || '(' || in_lb
   || RPAD(in_tab || '"' || in_export_log_table_attributes(1) || '"', 47, ' ') || ' INTEGER GENERATED ALWAYS AS IDENTITY (MINVALUE 1 NOMAXVALUE INCREMENT BY 1 START WITH 1 NOCACHE ORDER NOCYCLE NOKEEP NOSCALE), ' || in_lb
   || RPAD(in_tab || '"' || in_export_log_table_attributes(2) || '"', 47, ' ') || ' CONSTRAINT "' || in_export_log_table_name || '_FK" REFERENCES "' || in_export_tables_owner || '"."' || in_export_main_table_name || '"("' || in_export_main_table_attributes(1) || '") ON DELETE SET NULL,' || in_lb
   || RPAD(in_tab || '"' || in_export_log_table_attributes(3) || '"', 47, ' ') || ' TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL ENABLE,' || in_lb
   || RPAD(in_tab || '"' || in_export_log_table_attributes(4) || '"', 47, ' ') || ' CHAR(1 CHAR),' || in_lb
   || RPAD(in_tab || '"' || in_export_log_table_attributes(5) || '"', 47, ' ') || ' VARCHAR2(512 CHAR),' || in_lb
        || in_lb
   || RPAD(in_tab || 'CONSTRAINT "' || in_export_log_table_name || '__' || in_export_log_table_attributes(4) || '_CH"', 47, ' ') || ' CHECK ("' || in_export_log_table_attributes(4) || '" IN (''?'', ''I'', ''W'', ''E'')) ENABLE,' || in_lb        
   || RPAD(in_tab || 'CONSTRAINT "' || in_export_log_table_name || '_PK"', 47, ' ') || ' PRIMARY KEY ("' || in_export_log_table_attributes(1) || '") USING INDEX ENABLE' || in_lb
        || ')';

    DBMS_OUTPUT.PUT_LINE(v_sql);
    DBMS_OUTPUT.NEW_LINE();
    IF NOT in_noexec AND in_create_tables THEN
        BEGIN
            EXECUTE IMMEDIATE v_sql;
        EXCEPTION
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE(SQLERRM);
                DBMS_OUTPUT.PUT_LINE('SUPRESSING FURTHER DDL STATEMENTS');
                DBMS_OUTPUT.NEW_LINE();
                in_noexec := TRUE;
        END;
    END IF;

    SELECT COUNT(1) INTO v_count FROM ALL_USERS
    WHERE "USERNAME" = in_export_procedures_owner;
    IF v_count != 1 THEN
        SELECT SYS_CONTEXT('USERENV', 'CURRENT_SCHEMA') INTO in_export_procedures_owner FROM dual;
        DBMS_OUTPUT.PUT_LINE('in_export_procedures_owner := ''' || in_export_procedures_owner || ''';');
        DBMS_OUTPUT.NEW_LINE();
    END IF;

    v_sql :=
        'CREATE OR REPLACE PROCEDURE "' || in_export_procedures_owner || '"."' || in_export_log_procedure_name || '" (' || in_lb
    || RPAD(in_tab || 'in_' || LOWER(in_export_log_table_attributes(2)), 31, ' ') || ' IN "' || in_export_tables_owner || '"."' || in_export_log_table_name || '"."' || in_export_log_table_attributes(2) || '"%TYPE,' || in_lb
    || RPAD(in_tab || 'in_' || LOWER(in_export_log_table_attributes(4)), 31, ' ') || ' IN "' || in_export_tables_owner || '"."' || in_export_log_table_name || '"."' || in_export_log_table_attributes(4) || '"%TYPE,' || in_lb
    || RPAD(in_tab || 'in_' || LOWER(in_export_log_table_attributes(5)), 31, ' ') || ' IN "' || in_export_tables_owner || '"."' || in_export_log_table_name || '"."' || in_export_log_table_attributes(5) || '"%TYPE' || in_lb
        || ')' || in_lb
        || 'AS' || in_lb
        || in_tab || 'PRAGMA AUTONOMOUS_TRANSACTION;'
        || in_lb
        || 'BEGIN' || in_lb
        || in_lb
        || in_tab || 'INSERT INTO "' || in_export_tables_owner || '"."' || in_export_log_table_name || '"("' || in_export_log_table_attributes(2) || '", "' || in_export_log_table_attributes(4) || '", "' || in_export_log_table_attributes(5) || '")' || in_lb
        || in_tab || in_tab || 'VALUES (in_' || LOWER(in_export_log_table_attributes(2)) || ', in_' || LOWER(in_export_log_table_attributes(4)) || ', in_' || LOWER(in_export_log_table_attributes(5)) || ');' || in_lb
        || in_tab || 'COMMIT;' || in_lb
        || in_lb
        || 'END "' || in_export_log_procedure_name || '";';

    DBMS_OUTPUT.PUT_LINE(v_sql);
    DBMS_OUTPUT.NEW_LINE();
    IF NOT in_noexec AND in_compile_procedures THEN
        BEGIN
            EXECUTE IMMEDIATE v_sql;
        EXCEPTION
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE(SQLERRM);
                DBMS_OUTPUT.PUT_LINE('SUPRESSING FURTHER DDL STATEMENTS');
                DBMS_OUTPUT.NEW_LINE();
                in_noexec := TRUE;
        END;
    END IF;

    v_sql :=
        'CREATE OR REPLACE PROCEDURE "' || in_export_procedures_owner || '"."' || in_export_procedure_name || '" (' || in_lb
   || RPAD(in_tab || 'in_' || LOWER(in_export_main_table_attributes(1)), 31, ' ') ||        ' IN "' || in_export_tables_owner || '"."' || in_export_main_table_name || '"."' || in_export_main_table_attributes(1) || '"%TYPE' || in_lb
        || ')' || in_lb
        || 'IS ' || in_lb
        || in_lb
   || RPAD(in_tab || 'v_cursor', 31, ' ') ||                                                ' INTEGER;' || in_lb
   || RPAD(in_tab || 'v_col_count', 31, ' ') ||                                             ' INTEGER;' || in_lb
   || RPAD(in_tab || 'v_col_desc', 31, ' ') ||                                              ' DBMS_SQL.DESC_TAB2;' || in_lb
        || in_lb
   || RPAD(in_tab || 'v_' || LOWER(in_export_main_table_attributes(5)), 31, ' ') ||         ' "' || in_export_tables_owner || '"."' || in_export_main_table_name || '"."' || in_export_main_table_attributes(5) || '"%TYPE;' || in_lb
   || RPAD(in_tab || 'v_' || LOWER(in_export_main_table_attributes(6)), 31, ' ') ||         ' "' || in_export_tables_owner || '"."' || in_export_main_table_name || '"."' || in_export_main_table_attributes(6) || '"%TYPE;' || in_lb        
   || RPAD(in_tab || 'v_' || LOWER(in_export_main_table_attributes(7)), 31, ' ') ||         ' "' || in_export_tables_owner || '"."' || in_export_main_table_name || '"."' || in_export_main_table_attributes(7) || '"%TYPE;' || in_lb
        || in_lb;

    DECLARE
        i_type_code                                 PLS_INTEGER;
    BEGIN
        i_type_code := in_export_procedure_type_code_map.FIRST;
        LOOP
        EXIT WHEN i_type_code IS NULL;
            v_sql := v_sql
       || RPAD(in_tab || 'v_tmp_tbl_' || i_type_code, 31, ' ') || ' ' || in_export_procedure_type_code_map(i_type_code) || ';' || in_lb;
            i_type_code := in_export_procedure_type_code_map.NEXT(i_type_code);
        END LOOP;
    END;

    v_sql := v_sql
        || in_lb
        || 'BEGIN' || in_lb
        || in_lb
        || in_tab || 'BEGIN' || in_lb
        || in_tab || in_tab || 'SELECT "' || in_export_main_table_attributes(5) || '", "' || in_export_main_table_attributes(6) || '", "' || in_export_main_table_attributes(7) || '"' || in_lb
        || in_tab || in_tab || 'INTO ' || 'v_' || LOWER(in_export_main_table_attributes(5)) || ', v_' || LOWER(in_export_main_table_attributes(6)) || ', v_' || LOWER(in_export_main_table_attributes(7)) || in_lb
        || in_tab || in_tab || 'FROM "' || in_export_tables_owner || '"."' || in_export_main_table_name || '"' || in_lb
        || in_tab || in_tab || 'WHERE "' || in_export_main_table_attributes(1) || '" = in_' || LOWER(in_export_main_table_attributes(1)) || ' AND "' || in_export_main_table_attributes(3) || '" IS NULL' || in_lb
        || in_tab || in_tab || 'FOR UPDATE NOWAIT;' || in_lb
        || in_lb
        || in_tab || in_tab || 'UPDATE "' || in_export_tables_owner || '"."' || in_export_main_table_name || '"' || in_lb
        || in_tab || in_tab || 'SET "' || in_export_main_table_attributes(3) || '" = CURRENT_TIMESTAMP' || in_lb
        || in_tab || in_tab || 'WHERE "' || in_export_main_table_attributes(1) || '" = in_' || LOWER(in_export_main_table_attributes(1)) || ';' || in_lb
        || in_lb
        || in_tab || in_tab || 'COMMIT;' || in_lb
        || in_tab || 'EXCEPTION' || in_lb
        || in_tab || in_tab || 'WHEN OTHERS THEN' || in_lb
        || in_tab || in_tab || in_tab || '"' || in_export_procedures_owner || '"."' || in_export_log_procedure_name || '"(NULL, ''E'', ''SET SQL RETRIEVAL ERROR ON in_' || LOWER(in_export_main_table_attributes(1)) || ' = '' || in_' || LOWER(in_export_main_table_attributes(1)) || ' || '': '' || SQLERRM);' || in_lb
        || in_tab || in_tab || in_tab || 'RETURN;' || in_lb
        || in_tab || 'END;' || in_lb
        || in_lb
        || in_tab || 'BEGIN' || in_lb
        || in_tab || in_tab || 'v_cursor := DBMS_SQL.OPEN_CURSOR();' || in_lb
        || in_tab || 'EXCEPTION' || in_lb
        || in_tab || in_tab || 'WHEN OTHERS THEN' || in_lb
        || in_tab || in_tab || in_tab || '"' || in_export_procedures_owner || '"."' || in_export_log_procedure_name || '"(in_' || LOWER(in_export_main_table_attributes(1)) || ', ''E'', ''CURSOR ALLOCATION ERROR'');' || in_lb
        || in_tab || in_tab || in_tab || 'RAISE;' || in_lb
        || in_tab || 'END;' || in_lb
        || in_lb
        || in_tab || 'BEGIN' || in_lb
        || in_tab || in_tab || 'DBMS_SQL.PARSE(v_cursor, ''SELECT * FROM ('' || v_' || LOWER(in_export_main_table_attributes(5)) || ' || '')'', DBMS_SQL.NATIVE);' || in_lb
        || in_tab || 'EXCEPTION' || in_lb
        || in_tab || in_tab || 'WHEN OTHERS THEN' || in_lb
        || in_tab || in_tab || in_tab || '"' || in_export_procedures_owner || '"."' || in_export_log_procedure_name || '"(in_' || LOWER(in_export_main_table_attributes(1)) || ', ''E'', ''PARSE ERROR'');' || in_lb
        || in_tab || in_tab || in_tab || 'RAISE;' || in_lb
        || in_tab || 'END;' || in_lb
        || in_lb
        || in_tab || 'IF v_' || LOWER(in_export_main_table_attributes(7)) || ' IS NOT NULL THEN' || in_lb
        || in_tab || in_tab || 'BEGIN' || in_lb
        || in_tab || in_tab || in_tab || 'DBMS_SQL.BIND_VARIABLE(v_cursor, v_' || LOWER(in_export_main_table_attributes(7)) || ', v_' || LOWER(in_export_main_table_attributes(6)) || ');' || in_lb
        || in_tab || in_tab || 'EXCEPTION' || in_lb
        || in_tab || in_tab || in_tab || 'WHEN OTHERS THEN' || in_lb
        || in_tab || in_tab || in_tab || in_tab || '"' || in_export_procedures_owner || '"."' || in_export_log_procedure_name || '"(in_' || LOWER(in_export_main_table_attributes(1)) || ', ''E'', ''VARIABLE BINDING ERROR'');' || in_lb
        || in_tab || in_tab || in_tab || in_tab || 'RAISE;' || in_lb    
        || in_tab || in_tab || 'END;' || in_lb
        || in_tab || 'END IF;' || in_lb
        || in_lb    
        || in_tab || 'DECLARE' || in_lb
    || RPAD(in_tab || in_tab || 'i_col', 15, ' ') || ' INTEGER := 0;' || in_lb
        || in_tab || 'BEGIN' || in_lb
        || in_tab || in_tab || 'DBMS_SQL.DESCRIBE_COLUMNS2(v_cursor, v_col_count, v_col_desc);' || in_lb
        || in_lb
        || in_tab || in_tab || 'i_col := 1;' || in_lb
        || in_tab || in_tab || 'LOOP' || in_lb
        || in_tab || in_tab || 'EXIT WHEN i_col > v_col_count;' || in_lb
        || in_tab || in_tab || in_tab || 'CASE v_col_desc(i_col).col_type' || in_lb;

    DECLARE
        i_type_code         PLS_INTEGER;
    BEGIN
        i_type_code := in_export_procedure_type_code_map.FIRST;
        LOOP
        EXIT WHEN i_type_code IS NULL;
            v_sql := v_sql
                || in_tab || in_tab || in_tab || in_tab || 'WHEN ' || i_type_code || ' THEN' || in_lb
                || in_tab || in_tab || in_tab || in_tab || in_tab || 'DBMS_SQL.DEFINE_ARRAY(v_cursor, i_col, v_tmp_tbl_' || i_type_code || ', ' || in_export_procedure_bulk_collect_size || ', 1);' || in_lb
                || in_tab || in_tab || in_tab || in_tab || in_tab || 'INSERT INTO "' || in_export_tables_owner || '"."' || in_export_columns_table_name || '" ("' || in_export_columns_table_attributes(1) || '", "' || in_export_columns_table_attributes(2) || '", "' || in_export_columns_table_attributes(3) || '", "' || in_export_columns_table_attributes(4) || '", "' || in_export_columns_table_attributes(5) || '", "' || in_export_columns_table_attributes(6) || '")' || in_lb
                || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || 'VALUES (in_' || LOWER(in_export_main_table_attributes(1)) || ', i_col, v_col_desc(i_col).col_name, v_col_desc(i_col).col_type, v_col_desc(i_col).col_max_len, 1);' || in_lb;
            i_type_code := in_export_procedure_type_code_map.NEXT(i_type_code);
        END LOOP;
    END;

    v_sql := v_sql
        || in_tab || in_tab || in_tab || in_tab || 'ELSE' || in_lb
        || in_tab || in_tab || in_tab || in_tab || in_tab || 'INSERT INTO "' || in_export_tables_owner || '"."' || in_export_columns_table_name || '" ("' || in_export_columns_table_attributes(1) || '", "' || in_export_columns_table_attributes(2) || '", "' || in_export_columns_table_attributes(3) || '", "' || in_export_columns_table_attributes(4) || '", "' || in_export_columns_table_attributes(5) || '", "' || in_export_columns_table_attributes(6) || '")' || in_lb
        || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || 'VALUES (in_' || LOWER(in_export_main_table_attributes(1)) || ', i_col, v_col_desc(i_col).col_name, v_col_desc(i_col).col_type, v_col_desc(i_col).col_max_len, 0);' || in_lb
        || in_tab || in_tab || in_tab || in_tab || in_tab || 'v_col_desc(i_col).col_type := -1;' || in_lb
        || in_tab || in_tab || in_tab || 'END CASE;' || in_lb
        || in_tab || in_tab || in_tab || 'i_col := i_col + 1;' || in_lb
        || in_tab || in_tab || 'END LOOP;' || in_lb
        || in_tab || in_tab || 'COMMIT;' || in_lb
        || in_tab || 'EXCEPTION' || in_lb
        || in_tab || in_tab || 'WHEN OTHERS THEN' || in_lb
        || in_tab || in_tab || in_tab || '"' || in_export_procedures_owner || '"."' || in_export_log_procedure_name || '"(in_' || LOWER(in_export_main_table_attributes(1)) || ', ''E'', ''SCANNING COLUMNS OF v_cursor FAILED AT i_col = '' || i_col);' || in_lb
        || in_tab || in_tab || in_tab || 'RAISE;' || in_lb
        || in_tab || 'END;' || in_lb
        || in_lb
        || in_tab || 'DECLARE' || in_lb
   || RPAD(in_tab || in_tab || 'v_row_count', 15, ' ') || ' INTEGER := -1;' || in_lb
        || in_lb
   || RPAD(in_tab || in_tab || 'i_row', 15, ' ') || ' INTEGER := -1;' || in_lb
   || RPAD(in_tab || in_tab || 'i_col', 15, ' ') || ' INTEGER := -1;' || in_lb
   || RPAD(in_tab || in_tab || 'i_bulk', 15, ' ') || ' INTEGER := -1;' || in_lb      
        || in_tab || 'BEGIN' || in_lb
        || in_tab || in_tab || 'v_row_count := DBMS_SQL.EXECUTE(v_cursor);' || in_lb
        || in_lb
        || in_tab || in_tab || 'i_row := 1;' || in_lb
        || in_tab || in_tab || 'LOOP' || in_lb
        || in_tab || in_tab || in_tab || 'v_row_count := DBMS_SQL.FETCH_ROWS(v_cursor);' || in_lb
        || in_tab || in_tab || in_tab || 'EXIT WHEN v_row_count = 0;' || in_lb
        || in_tab || in_tab || in_tab || 'i_col := 1;' || in_lb
        || in_tab || in_tab || in_tab || 'LOOP' || in_lb
        || in_tab || in_tab || in_tab || in_tab || 'EXIT WHEN i_col > v_col_count;' || in_lb
        || in_tab || in_tab || in_tab || in_tab || 'CASE v_col_desc(i_col).col_type' || in_lb;

    DECLARE
        i_type_code         PLS_INTEGER;
    BEGIN
        i_type_code := in_export_procedure_type_code_map.FIRST;
        LOOP
        EXIT WHEN i_type_code IS NULL;
            v_sql := v_sql
                || in_tab || in_tab || in_tab || in_tab || in_tab || 'WHEN ' || i_type_code || ' THEN' || in_lb
                || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || 'DBMS_SQL.COLUMN_VALUE(v_cursor, i_col, v_tmp_tbl_' || i_type_code || ');' || in_lb
                || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || 'i_bulk := 0;' || in_lb
                || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || 'LOOP' || in_lb
                || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || 'EXIT WHEN i_bulk = v_row_count;' || in_lb
                || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || 'INSERT INTO "' || in_export_tables_owner || '"."' || in_export_cells_table_name || '" ("' || in_export_cells_table_attributes(1) || '", "' || in_export_cells_table_attributes(2) || '", "' || in_export_cells_table_attributes(3) || '", "' || in_export_cells_table_attributes(4) || '")' || in_lb
                || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || 'VALUES (in_' || LOWER(in_export_main_table_attributes(1)) || ', i_col, i_row + i_bulk, v_tmp_tbl_' || i_type_code || '(i_row + i_bulk));' || in_lb
                || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || 'i_bulk := i_bulk + 1;' || in_lb
                || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || 'END LOOP;' || in_lb;
            i_type_code := in_export_procedure_type_code_map.NEXT(i_type_code);
        END LOOP;
    END;

    v_sql := v_sql
        || in_tab || in_tab || in_tab || in_tab || in_tab || 'ELSE' || in_lb
        || in_tab || in_tab || in_tab || in_tab || in_tab || in_tab || 'NULL;' || in_lb    
        || in_tab || in_tab || in_tab || in_tab || 'END CASE;' || in_lb
        || in_tab || in_tab || in_tab || in_tab || 'i_col := i_col + 1;' || in_lb
        || in_tab || in_tab || in_tab || 'END LOOP;' || in_lb
        || in_tab || in_tab || 'EXIT WHEN v_row_count != ' || in_export_procedure_bulk_collect_size || ';' || in_lb
        || in_tab || in_tab || in_tab || 'i_row := i_row + v_row_count;' || in_lb
        || in_tab || in_tab || 'END LOOP;' || in_lb
        || in_tab || in_tab || 'COMMIT;' || in_lb
        || in_tab || 'EXCEPTION' || in_lb
        || in_tab || in_tab || 'WHEN OTHERS THEN' || in_lb
        || in_tab || in_tab || in_tab || '"' || in_export_procedures_owner || '"."' || in_export_log_procedure_name || '"(in_' || LOWER(in_export_main_table_attributes(1)) || ', ''E'', ''FETCHING FROM v_cursor FAILED AT v_row_count = '' || v_row_count || '', i_col = '' || i_col || '', i_row = '' || i_row || '', i_bulk = '' || i_bulk);' || in_lb
        || in_tab || in_tab || in_tab || 'RAISE;' || in_lb
        || in_tab || 'END;' || in_lb
        || in_lb
        || in_tab || 'BEGIN' || in_lb
        || in_tab || in_tab || 'UPDATE "' || in_export_tables_owner || '"."' || in_export_main_table_name || '"' || in_lb
        || in_tab || in_tab || 'SET "' || in_export_main_table_attributes(4) || '" = CURRENT_TIMESTAMP' || in_lb
        || in_tab || in_tab || 'WHERE "' || in_export_main_table_attributes(1) || '" = in_' || LOWER(in_export_main_table_attributes(1)) || ';' || in_lb
        || in_lb
        || in_tab || in_tab || 'COMMIT;' || in_lb
        || in_tab || 'EXCEPTION' || in_lb
        || in_tab || in_tab || 'WHEN OTHERS THEN' || in_lb
        || in_tab || in_tab || in_tab || '"' || in_export_procedures_owner || '"."' || in_export_log_procedure_name || '"(in_' || LOWER(in_export_main_table_attributes(1)) || ', ''E'', ''UPDATE OF "PROCESS_TS_END" FAILED'');' || in_lb
        || in_tab || in_tab || in_tab || 'RAISE;' || in_lb
        || in_tab || 'END;' || in_lb
        || in_lb
        || in_tab || 'DBMS_SQL.CLOSE_CURSOR(v_cursor);' || in_lb
        || in_lb
        || 'EXCEPTION' || in_lb
        || in_tab || 'WHEN OTHERS THEN' || in_lb
        || in_tab || in_tab || '"' || in_export_procedures_owner || '"."' || in_export_log_procedure_name || '"(in_' || LOWER(in_export_main_table_attributes(1)) || ', ''E'', SQLERRM);' || in_lb
        || in_tab || in_tab || 'IF DBMS_SQL.IS_OPEN(v_cursor) THEN' || in_lb
        || in_tab || in_tab || in_tab || '"' || in_export_procedures_owner || '"."' || in_export_log_procedure_name || '"(in_' || LOWER(in_export_main_table_attributes(1)) || ', ''I'', ''CLOSING v_cursor'');' || in_lb
        || in_tab || in_tab || in_tab || 'DBMS_SQL.CLOSE_CURSOR(v_cursor);' || in_lb
        || in_tab || in_tab || 'END IF;' || in_lb
        || in_tab || in_tab  || '"' || in_export_procedures_owner || '"."' || in_export_log_procedure_name || '"(in_' || LOWER(in_export_main_table_attributes(1)) || ', ''I'', ''v_cursor IS CLOSED'');' || in_lb
        || in_tab || in_tab || 'ROLLBACK;' || in_lb
        --|| in_tab || in_tab || 'RAISE;' || in_lb
        || 'END "' || in_export_procedure_name || '";';

    DBMS_OUTPUT.PUT_LINE(v_sql);
    DBMS_OUTPUT.NEW_LINE();
    IF NOT in_noexec AND in_compile_procedures THEN
        BEGIN
            EXECUTE IMMEDIATE v_sql;
        EXCEPTION
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE(SQLERRM);
                DBMS_OUTPUT.PUT_LINE('ERROR; SUPRESSING FURTHER DDL STATEMENTS');
                DBMS_OUTPUT.NEW_LINE();
                in_noexec := TRUE;
        END;
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
